---
- name: Create Units directory
  file: path={{ playbook_dir }}/units state=directory
  tags:
    - configuration

# Prerequisities
# ssh access to machine
# fleetctl available on $PATH
# key used in tunnel in ssh-agent
- name: Gather fleet machines info
  get_coreos_machines: tunnel={{ fleet_endpoint }}
  register: fleetctl_hosts
  tags:
    - configuration
    - coreos_registry

- name: Find registry host
  choose_registry_machine: IPS="{{ item['IPS'] }}" IDS="{{ item['IDS'] }}"
  register: registry_host
  with_items:
    - "{{ fleetctl_hosts['stdout'] }}"
  tags:
    - configuration
    - coreos_registry
  notify:
    - Write registry IP to coreos servers
    - Write registry IP locally

# Create dockerfile
- name: Create docker directory for registry
  file: path={{ playbook_dir }}/docker/docker-registry state=directory
  tags:
    - configuration

- name: Create Registry Dockerfile
  template: src=registry-dockerfile.j2 dest={{ playbook_dir }}/docker/docker-registry/Dockerfile
  tags:
    - configuration

- name: Copy extra files for Registry image
  copy: src={{ item }} dest={{ playbook_dir }}/docker/docker-registry/{{ item }}
  with_items:
    - "config.yml"
  tags:
    - configuration

- name: Build Registry image
  docker_image: docker_url=tcp://{{ registry_hostname }}:2375 path="{{ playbook_dir }}/docker/docker-registry" name="{{ registry_image_name }}" state="build"
  tags:
    - docker
    - docker_push

#- name: Push Registry image to repo
#  shell: "docker -H tcp://{{ registry_hostname }}:2375 push {{ registry_image_name }}"
#  tags:
#    - docker
#    - docker_push

# Create unit
- name: Create Registry Units
  template: src=registry@x.service.j2 dest={{ playbook_dir }}/units/registry@1.service
  tags:
    - configuration

# Submit Units
- name: Submit Registry units
  shell: fleetctl --tunnel {{ fleet_endpoint }} submit {{ playbook_dir }}/units/{{ item }}
  with_items:
    - "registry@1.service"
  tags:
    - fleet_submit
    - fleet_submit_registry

# Start Units
- name: Start Registry units
  shell: sleep 5 && fleetctl --tunnel {{ fleet_endpoint }} start {{ item }}
  with_items:
    - "registry@1.service"
  tags:
    - fleet_start
    - fleet_start_registry

